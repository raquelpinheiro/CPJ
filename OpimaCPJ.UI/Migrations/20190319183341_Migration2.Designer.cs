// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OpimaCpj.Data.Context;

namespace OpimaCPJ.Web.Migrations
{
    [DbContext(typeof(OpimaCpjContext))]
    [Migration("20190319183341_Migration2")]
    partial class Migration2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OpimaCPJ.Domain.Bairro", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CidadeCodigo");

                    b.Property<int>("CodigoCidade");

                    b.Property<string>("Nome");

                    b.HasKey("Codigo");

                    b.HasIndex("CidadeCodigo");

                    b.ToTable("Bairro");
                });

            modelBuilder.Entity("OpimaCPJ.Domain.Cidade", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodigoEstado");

                    b.Property<int?>("EstadoCodigo");

                    b.Property<string>("Nome");

                    b.HasKey("Codigo");

                    b.HasIndex("EstadoCodigo");

                    b.ToTable("Cidade");
                });

            modelBuilder.Entity("OpimaCPJ.Domain.Endereco", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cep");

                    b.Property<int?>("CodigoBairro");

                    b.Property<int?>("CodigoPessoa");

                    b.Property<string>("Complemento");

                    b.Property<string>("Numero");

                    b.Property<string>("Rua");

                    b.Property<string>("TelefoneCelular");

                    b.Property<string>("TelefoneResidencial");

                    b.Property<string>("TipoEndereco");

                    b.HasKey("Codigo");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("OpimaCPJ.Domain.Estado", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.HasKey("Codigo");

                    b.ToTable("Estado");
                });

            modelBuilder.Entity("OpimaCPJ.Domain.Bairro", b =>
                {
                    b.HasOne("OpimaCPJ.Domain.Cidade", "Cidade")
                        .WithMany("Bairros")
                        .HasForeignKey("CidadeCodigo");
                });

            modelBuilder.Entity("OpimaCPJ.Domain.Cidade", b =>
                {
                    b.HasOne("OpimaCPJ.Domain.Estado", "Estado")
                        .WithMany("Cidades")
                        .HasForeignKey("EstadoCodigo");
                });
#pragma warning restore 612, 618
        }
    }
}
