// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OpimaCpj.Data.Context;

namespace OpimaCPJ.Web.Migrations
{
    [DbContext(typeof(OpimaCpjContext))]
    [Migration("20190320134959_MigCpj1")]
    partial class MigCpj1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OpimaCPJ.Domain.Bairro", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CidadeCodigo");

                    b.Property<int>("CodigoCidade");

                    b.Property<string>("Nome");

                    b.HasKey("Codigo");

                    b.HasIndex("CidadeCodigo");

                    b.ToTable("Bairro");
                });

            modelBuilder.Entity("OpimaCPJ.Domain.Cidade", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodigoEstado");

                    b.Property<int?>("EstadoCodigo");

                    b.Property<string>("Nome");

                    b.HasKey("Codigo");

                    b.HasIndex("EstadoCodigo");

                    b.ToTable("Cidade");
                });

            modelBuilder.Entity("OpimaCPJ.Domain.Endereco", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<string>("Cidade");

                    b.Property<int?>("CodigoPessoa");

                    b.Property<string>("Complemento")
                        .HasMaxLength(100);

                    b.Property<string>("Estado");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int?>("PessoaCodigo");

                    b.Property<string>("TipoEndereco");

                    b.HasKey("Codigo");

                    b.HasIndex("PessoaCodigo");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("OpimaCPJ.Domain.Estado", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.HasKey("Codigo");

                    b.ToTable("Estado");
                });

            modelBuilder.Entity("OpimaCPJ.Domain.PessoaFisica", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf");

                    b.Property<DateTime?>("DataCadastro");

                    b.Property<DateTime?>("DataNascimento");

                    b.Property<string>("Email");

                    b.Property<string>("Nacionalidade");

                    b.Property<string>("Nome");

                    b.Property<string>("NomeMae");

                    b.Property<string>("NomePai");

                    b.Property<string>("NumeroOAB");

                    b.Property<string>("Profissao");

                    b.Property<string>("Sexo");

                    b.Property<string>("TelefoneCelular");

                    b.Property<string>("TelefoneResidencial");

                    b.HasKey("Codigo");

                    b.ToTable("PessoaFisica");
                });

            modelBuilder.Entity("OpimaCPJ.Domain.Bairro", b =>
                {
                    b.HasOne("OpimaCPJ.Domain.Cidade", "Cidade")
                        .WithMany("Bairros")
                        .HasForeignKey("CidadeCodigo");
                });

            modelBuilder.Entity("OpimaCPJ.Domain.Cidade", b =>
                {
                    b.HasOne("OpimaCPJ.Domain.Estado", "Estado")
                        .WithMany("Cidades")
                        .HasForeignKey("EstadoCodigo");
                });

            modelBuilder.Entity("OpimaCPJ.Domain.Endereco", b =>
                {
                    b.HasOne("OpimaCPJ.Domain.PessoaFisica", "Pessoa")
                        .WithMany("Enderecos")
                        .HasForeignKey("PessoaCodigo");
                });
#pragma warning restore 612, 618
        }
    }
}
